# n8n/.env.template
# Copy this file to n8n/.env and fill in critical values for the n8n service.

# --- n8n User Authentication ---
# Enable or disable basic authentication for the n8n interface.
N8N_BASIC_AUTH_ACTIVE=true
# Username for n8n basic authentication.
N8N_BASIC_AUTH_USER=admin
# Password for n8n basic authentication.
N8N_BASIC_AUTH_PASSWORD=your_strong_n8n_password_here

# --- n8n Security ---
# CRITICAL: Generate a unique, random 32-character string for encrypting credentials.
# Example: `openssl rand -hex 16`
N8N_ENCRYPTION_KEY=generate_a_strong_32_char_random_key_here

# --- n8n General Configuration ---
# Set the timezone for n8n operations (e.g., cron nodes, logs).
# List of timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
N8N_TIMEZONE=UTC # Example: Europe/London

# --- Database & Queue ---
# PostgreSQL and Redis connection details (host, user, password, port, specific DB names)
# are typically set in the project's root .env file and are used by
# n8n's docker-compose.yml to construct the full connection strings.
# Ensure these are correctly set in your global .env:
# - POSTGRES_HOST, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_PORT, POSTGRES_N8N_DB
# - REDIS_HOST, REDIS_PASSWORD, REDIS_PORT

# --- Setup ---
# 1. Copy to n8n/.env.
# 2. Set N8N_BASIC_AUTH_PASSWORD and N8N_ENCRYPTION_KEY.
# 3. Adjust N8N_TIMEZONE if needed.
# 4. Ensure PostgreSQL & Redis are configured in the global .env.

# Note: n8n automatically creates database tables on first run.
# For more advanced configurations, refer to the official n8n documentation.
