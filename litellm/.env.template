# litellm/.env.template
# Copy this file to litellm/.env and fill in critical values.
# For a full list of all possible environment variables (API keys, monitoring),
# please refer to the official LiteLLM documentation.

# --- LiteLLM Specific Database Name ---
# This defines the name of the database LiteLLM will use within the shared PostgreSQL instance.
# The actual PostgreSQL connection URL is built using global .env variables in docker-compose.yml.
POSTGRES_LITELLM_DB=litellm_db

# --- LiteLLM Authentication & Security ---
# IMPORTANT: Generate strong, random keys for LiteLLM's security.
# These are used for securing the LiteLLM instance and managing virtual API keys.
LITELLM_MASTER_KEY="your_very_strong_litellm_master_key_here"
LITELLM_SALT_KEY="your_very_strong_litellm_salt_key_here"

# --- Core AI Provider API Key (Example for OpenAI) ---
# Add API keys for the LLM providers you will use with LiteLLM.
# These keys will typically be configured within LiteLLM's main config.yml,
# but can also be set as environment variables if LiteLLM's config.yml refers to them.
# OPENAI_API_KEY=your_openai_api_key_here

# --- LiteLLM Application Configuration ---
# Whether to store model information (aliases, settings) in the database.
STORE_MODEL_IN_DB=True

# Log level for LiteLLM. Options: DEBUG, INFO, WARNING, ERROR.
# Default is INFO. Can be set in docker-compose.yml or overridden here.
# LITELLM_LOG=DEBUG

# Note:
# - Database (PostgreSQL) and Cache (Redis) connection URLs are typically constructed
#   in the litellm/docker-compose.yml file using variables from the root project .env file
#   (e.g., POSTGRES_USER, POSTGRES_PASSWORD, REDIS_PASSWORD).
# - Detailed model configurations, routing, and virtual API keys are managed
#   in LiteLLM's main `config.yml` file (mounted into the container).
# - For extensive lists of supported LLM provider API keys and monitoring tool
#   integrations, consult the official LiteLLM documentation.
