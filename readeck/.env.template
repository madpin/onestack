# readeck/.env.template
# Copy to readeck/.env and adjust. Many defaults are safe to leave unset.

# ------------ Core Settings ------------
# Log level: error | warn | info | debug
READECK_LOG_LEVEL=info

# Optionally force a specific secret key (otherwise generated on first run and stored in config.toml)
# READECK_SECRET_KEY=

# ------------ Database ------------
# By default Readeck uses SQLite inside the mounted ./data volume under data/db.sqlite3.
# To use PostgreSQL (recommended only for multi-instance scaling), set a full URL:
# Format: postgres://USER:PASS@HOST:PORT/DBNAME
# Example using shared postgres service variables (ensure DB & user are created):
# READECK_DATABASE_SOURCE=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/readeck

# ------------ Email (Optional) ------------
# Enable outbound email (share bookmarks, password reset) by populating these.
# READECK_MAIL_HOST=
# READECK_MAIL_PORT=
# READECK_MAIL_USERNAME=
# READECK_MAIL_PASSWORD=
# READECK_MAIL_ENCRYPTION= # starttls | ssltls
# READECK_MAIL_FROM=
# READECK_MAIL_FROMNOREPLY=
# READECK_MAIL_INSECURE=false

# ------------ Public Sharing ------------
# Time (hours) public share links remain valid (default 24)
# READECK_PUBLIC_SHARE_TTL=24

# ------------ Reverse Proxy ------------
# Only needed if deviating from defaults or adding extra trust ranges.
# READECK_TRUSTED_PROXIES=["127.0.0.1"]

# ------------ Content Extraction ------------
# Paths for custom content scripts (already mounted if you uncomment volume in compose)
# Example: READECK_EXTRACTOR_CONTENT_SCRIPTS=["data/content-scripts"]

# ------------ Advanced ------------
# URL prefix if serving under subpath (must also adjust Traefik rule/path stripping)
# READECK_SERVER_PREFIX=/
# Canonical base URL is set via compose labels/env (override here if needed)
# READECK_SERVER_BASE_URL=https://readeck.example.com

# Notes:
# 1. After first launch, inspect ./data/config.toml for generated values.
# 2. Do not change READECK_SECRET_KEY after users have registered.
# 3. For PostgreSQL, ensure latency & reliability needs justify the switch.


